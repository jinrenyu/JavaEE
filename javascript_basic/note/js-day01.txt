author:success

JavaScript
定义:JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。
	它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，
	最早是在HTML（标准通用标记语言下的一个应用）网页上使用，用来给HTML网页增加动态功能。
	1995年之前,所有的网页校验都必须通过后台服务器进行.试想这样一种情况,如果一张表单
	拥有需要进行大量填写的输入项,但是用户忘记填写其中的某一个必填项并进行了提交,就会造成
	只有当表单提交到后台之后,然后用户会得到反馈(某一项必填项未填写).并且早期网络带宽非常的
	狭窄,就会造成用户在填写一个大量数据表单之后得到一个非常不友好的交互体验.重新填写之后
	再提交造成时间的浪费.
	
	正是由于这种需求,所以开发出许多类似于JavaScript这样的浏览器脚本语言.
	
	创始人:Brendan Eich 
	公司:Netscape(网景)(livescript, 起初的时候, 各个浏览器支持的情况也不尽相同)
	创建之初因为提供了前端校验的功能, 非常受欢迎. 后来与Sun公司合作, 
	把Livescript改成了javascript.

	其他脚本语言:Jscript(MS公司的)、VBScript(MS公司的)、applet(Java实现的小程序).....

	组成部分:
							JavaScript
	
	ECMAScript	262		文档对象模型(DOM)			浏览器对象模型(BOM)

	1.ECMAScript，描述了该语言的语法和基本对象
	2.文档对象模型（DOM），描述处理网页内容的方法和接口
	3.浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口
=======
	基本特点:
	是一种解释性脚本语言（代码不进行预编译）。[4] 
	主要用来向HTML（标准通用标记语言下的一个应用）页面添加交互行为。[4] 
	可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。[4] 
	跨平台特性，在绝大多数浏览器的支持下，可以在多种平台下运行（如Windows、Linux、Mac、Android、iOS等）。
	Javascript脚本语言同其他语言一样，有它自身的基本数据类型，表达式和算术运算符及程序的基本程序框架。
	Javascript提供了四种基本的数据类型和两种特殊数据类型用来处理数据和文字。而变量提供存放信息的地方，
	表达式则可以完成较复杂的信息处理。[5] 
======
	特性:
	(1)脚本语言。JavaScript是一种解释型的脚本语言,C、C++等语言先编译后执行,而JavaScript是在程序的运行过程中逐行进行解释。
	(2)基于对象。JavaScript是一种基于对象的脚本语言,它不仅可以创建对象,也能使用现有的对象。
	(3)简单。JavaScript语言中采用的是弱类型的变量类型,对使用的数据类型未做出严格的要求,是基于Java基本语句和控制的脚本语言,
			其设计简单紧凑。
	(4)动态性。JavaScript是一种采用事件驱动的脚本语言,它不需要经过Web服务器就可以对用户的输入做出响应。
			   在访问一个网页时,鼠标在网页中进行鼠标点击或上下移、窗口移动等操作JavaScript都可直接对这些事件给出相应的响应。
	(5)跨平台性。JavaScript脚本语言不依赖于操作系统,仅需要浏览器的支持。因此一个JavaScript脚本在编写后可以带到任意机器上使用,
	 前提上机器上的浏览器支 持JavaScript脚本语言,目前JavaScript已被大多数的浏览器所支持。[3] 
	 不同于服务器端脚本语言，例如PHP与ASP，JavaScript主要被作为客户端脚本语言在用户的浏览器上运行，不需要服务器的支持。
	 所以在早期程序员比较青睐于JavaScript以减少对服务器的负担，而与此同时也带来另一个问题：安全性。
	 而随着服务器的强壮，虽然程序员更喜欢运行于服务端的脚本以保证安全，但JavaScript仍然以其跨平台、
	 容易上手等优势大行其道。同时，有些特殊功能（如AJAX）必须依赖Javascript在客户端进行支持。随着引擎如V8和框架
	 如Node.js的发展，及其事件驱动及异步IO等特性，JavaScript逐渐被用来编写服务器端程序。
=====	
学习知识点:
	1.JavaScript基础
	   a.js如何运行
	     按照文档流从上到下解析输出
	   b.js输出
	   c.如何在HTML文档中使用JS
	   d.变量
		变量时浏览器关闭时释放，浏览器没有关闭前可以随时使用
           e.数据类型
			number（int、float、double）
			string
			boolean
			object（object、array、null）
			undefind
	   f.运算符和表达式
			算数运算
			赋值运算
			条件运算
			逻辑运算
			位运算
			其他运算
	    g.流程控制
			顺序结构
			条件结构
			循环结构
	   h.函数  一组独立功能已经命名的代码的组合  调用使用
			1、函数名
			2、参数
			3、函数体
			4、返回值
			
			回调函数
			
	   i.对象
			将相关的操作用对象来完成，看成一个整体
			属性
			方法
			先声明 后使用
	   j.内置对象
			字符串对象
			数学对象
			数组
			时间对象
	  k.数组
=====